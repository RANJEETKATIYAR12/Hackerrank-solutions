#include <stdio.h>
#include <stdlib.h>

int cmp_int(const void *a, const void *b) {
    int ia = *(const int*)a;
    int ib = *(const int*)b;
    if (ia < ib) return -1;
    if (ia > ib) return 1;
    return 0;
}

int main() {
    int T;
    if (scanf("%d", &T) != 1) return 0;

    while (T--) {
        int n, k;
        scanf("%d %d", &n, &k);

        int *A = malloc(n * sizeof(int));
        int *B = malloc(n * sizeof(int));
        if (!A || !B) return 0;

        for (int i = 0; i < n; ++i) scanf("%d", &A[i]);
        for (int i = 0; i < n; ++i) scanf("%d", &B[i]);

        qsort(A, n, sizeof(int), cmp_int);
        qsort(B, n, sizeof(int), cmp_int);

        int ok = 1;
        for (int i = 0; i < n; ++i) {
            if (A[i] + B[n - 1 - i] < k) {
                ok = 0;
                break;
            }
        }

        printf("%s\n", ok ? "YES" : "NO");

        free(A);
        free(B);
    }

    return 0;
}
